A.

	1. [p] = ~<p>~ donc 
	|= [p]X <=> |= ~ (<p>(~X))
		<=> |= ~ (p ou ~X) <=> ~(X => p)
		<=> |= ~p et X

	2. Montrons que  <p>^n  =  <p><p>...<p>  = <p> et [p]^n  =  [p][p]...[p]  =  [p]

	Montrons cela par récurrence.
	Pour n=1, c'est évidemment vrai.
	Supposons la propriété vraie au rang n=k
	\A X \in F, on a
	|= <p>^k+1 X <=> |= <p>(<p>^k X)
		     <=> |= <p>(<p>X)
		     <=> |= p ou (<p>X)
		     <=> |= p ou (p ou X)
		     <=> |= p ou X
		     <=> |= <p>X

	de même pour [p]
	|= [p]^k+1 X <=> |= [p]([p]^k X)
		     <=> |= [p]([p]X)
		     <=> |= ~p et (<p>X)
		     <=> |= ~p et (~p et X)
		     <=> |= ~p et X
		     <=> |= [p]X


	Montrons que toute séquence de modalités Modi ∈{<p>, [p]} préfixant une formule X quelconque, telle que Mod1 Mod2 … Modn X, est une formule équivalente à Mod1 X.
Autrement dit :  Mod1 Mod2 … Modn  ≡  Mod1   pour toute modalité Modi ∈{<p>, [p]}
	
	Cela revient à dire que la première modalité "absorbe les autres", il faut donc montrer que <p>[p] = <p> et [p]<p> = [p]
	\A X \in F, on a
	|= <p>[p]X <=> |= <p>(~p et X)
		   <=> |= p ou (~p et X)
		   <=> |= (p ou ~p) et (p ou X)
		   <=> |= Vrai et (p ou X)
		   <=> |= p ou X
		   <=> |= <p>X 
	et
	|= [p]<p>X <=> |= [p](p ou X)
		   <=> |= ~p et (p ou X)
		   <=> |= (~p et p) ou (~p et X)
		   <=> |= Faux ou (~p et X)
		   <=> |= ~p et X
		   <=> |= [p]X
	Avec les propriétés <p>^n = <p> et [p]^n = [p], Cela montre bien que la première modalité "absorbe" les suivantes pour Modi ∈{<p>, [p]}.

	3. S5 = {epsilon, <>, []} Union {~, ~<>, ~[]}

	On a Sigma5 = {epsilon, <p>, [p]} Union {~, ~<p>, ~[p]}, en effet on a <p><p> = <p>, [p][p] =[p], <p>[p]=<p>, [p]<p>=[p], ~<p> = [p]~ et finalement ~[p] = <p>~, le reste des compositions étant trivial.
	Il y a donc une certaine ressemblance entre Sigma5 et S5. Mais Sigma5 est-il équivalent à S5? Pour savoir cela, il suffit de voir si les théorèmes caractéristiques de S5 sont aussi vérifiés dans Sigma5.

	Les théorèmes vérifiés par S5 sont :
	\A P,Q \in F
	(K): [](P => Q) => ([]P => []Q)
	(T): []P => P
	(4): []P => [][]P
	(B): P => []<>P 
	ou 
	(E): <>P => []<>P

	Essayons de les vérifier dans Sigma5

	\A P,Q \in F, on a :
	(K): [p](P => Q) => ([p]P => [p]Q)
	 <=> [p](~P ou Q) => ((~p et P) => (~p et Q))
	 <=> (~p et (~P ou Q)) => ((p ou ~P) ou (~p et Q))
	 <=> (p ou (P et ~Q)) ou ((p ou ~P) ou (~p et Q))
	 <=> p ou p ou ~P ou (P et ~Q) ou (~p et Q)
	 <=> p ou (~p et Q) ou ~P ou (P et ~Q)
	 <=> ((p ou ~p) et (p ou Q)) ou ((~P ou P) et (~P et Q))
	 <=> Vrai
	K est vérifié dans Sigma5.

	(T): [p]P => P 
	<=> (~p et P) => P
	<=> ~(~p et P) ou P
	<=> p ou ~P ou P
 	<=> Vrai
	T est vérifié dans Sigma5
	
	(4): [p]P => [p][p]P 
	<=> [p]P => [p]P
	<=> Vrai
	4 est vérifié dans Sigma5.

	(B): P => [p]<p>P 
	<=> P => [p]P
	<=> ~P ou (~p et P)
	<=> (~P ou ~p) et (~P ou P)
	<=> ~P ou ~p
	Proposition fausse si p et P sont vrais donc B n'est pas vérifié dans Sigma5.

	(E): <p>P => [p]<p>P
	<=> <p>P => [p]P
	<=> (p ou P) => (~p et P)
	<=> ~(p ou P) ou (~p et P)
	<=> (~p et ~P) ou (~p et P)
        Proposition fausse si p est faux donc E n'est pas vérifié dans Sigma5.

	Sigma5 vérifie donc KT4

	4. Comme on a montré a la question précédente, S5 et Sigma5 ont le même nombre de modalités, on a S5 = {epsilon, <>, []} Union {~, ~<>, ~[]} et Sigma5 = {epsilon, <p>, [p]} Union {~, ~<p>, ~[p]}.

	On a comme règles:
	\A X \in F
	|= epsilon X ssi |= X

	|= <p>X ssi |= p ou X

	|= [p]X ssi |= ~p et X

	|= ~X ssi |= ~X
	
	|= ~<p>X ssi |= [p]~X 
		 ssi |= ~p et ~X

	|= ~[p]X ssi |= <p>~X 
		 ssi |= p ou ~X

B.

	5. 

	Les théorèmes vérifiés par S4 sont :
	\A P,Q \in F
	(K): [](P => Q) => ([]P => []Q)
	(T): []P => P
	(4): []P => [][]P

	Essayons de les vérifier dans Sigma4 :
	(K): \A P,Q \in F et \A phi \in E0 on a :
	[phi](P => Q) => ([phi]P => [phi]Q) <=> Vrai, la démonstration se passe comme avec Sigma5. K est vérifié dans Sigma4
	De même T et 4 sont vérifiés dans Sigma4.
	
	6.
	S4 = { espilon, [], <>, []<>, <>[], []<>[], <>[]<>} Union { ~, ~[], ~<>, ~[]<>, ~<>[], ~[]<>[], ~<>[]<>}
	Sigma4 a aussi 14 modalités distinctes :
	Sigma4 = { espilon, <~p>, <p>, [~p], [p] } Union { ~, ~<~p>, ~<p>, ~[~p], ~[p] }
	On a comme règles:
	\A X \in F
	|= epsilon X ssi |= X

	|= <p>X ssi |= p ou X
	
	|= <~p>X ssi |= ~p ou X

	|= [p]X ssi |= ~p et X

	|= [~p]X ssi |= p et X

	|= ~X ssi |= ~X
	
	|= ~<p>X ssi |= ~p et ~X

	|= ~<~p>X ssi |= p et ~X

	|= ~[p]X ssi |= p ou ~X

	|= ~[~p]X ssi |= ~p ou ~X

	On a de plus les propriétés suivantes :
	
	1) \A n >= 0, (<p><~p>)^n == (<~p><p>)^n == espilon
	
	2) Pour toute modalité Mod, 
	\A X
	\A n>=0, ([p][~p])^n(Mod X) == ([~p][p])^n(Mod X) |= Faux

	D'où, 
	2-a) <p>[p][~p] X |=  p
	2-b) ~<p>[p][~p] X |=  p

	
C.

	1- E1
	Sigma5.1 = {epsilon, <Faux>, [Faux]} Union {~, ~<Faux>, ~[Faux]}.
	
	On a comme règles:
	\A X \in F
	|= epsilon X ssi |= X

	|= <Faux>X ssi |= Faux ou X |= X (identité)

	|= [Faux]X ssi |= Vrai et X |= X (identité)

	|= ~X ssi |= ~X
	
	|= ~<Faux>X ssi |= Vrai et ~X |= ~X (négation)

	|= ~[Faux]X ssi |= Faux ou ~X |= ~X (négation)
	
	Ainsi Sigma5.1 se réduit à {epsilon, ~} soit 2 modalités distintes définies par 
	\A X \in F
	|= epsilon X ssi |= X

	|= ~X ssi |= ~X

	
	Sigma5.1 vérifie donc KT4 tout comme Sigma5
	De plus
	(B): P => [p]<p>P 
	<=> ~P ou ~p
	<=> ~P ou Vrai (dans E1 car p = Faux)
	<=> Vrai
	Sigma5.1 vérifie donc B

	(E): <p>P => [p]<p>P
	<=> (~p et ~P) ou (~p et P)
	<=> (Vrai et ~P) ou (Vrai et P)   (dans E1 car p = Faux)
        <=> ~P ou P
	<=> Vrai
	Sigma5.1 verifie donc E
	
	Ainsi Sigma5.1 vérifie donc KT4BE comme S5

	
	Sigma4.1 = { espilon, <~Faux>} Union { ~, ~<~Faux> } soit 4 propriétés distinctes définies par :
	\A X \in F
	|= epsilon X ssi |= X

	|= <~Faux>X ssi |= <Vrai>X  |= Vrai ou X |= Vrai (même si X vaut Faux donc)

	|= ~X ssi |= ~X
	
	|= ~<~Faux>X ssi |= ~<Vrai>X |= Faux et ~X |= Faux (même si X vaut Vrai donc)
	
	Sigma4.1 vérifie donc KT4 tout comme Sigma4
